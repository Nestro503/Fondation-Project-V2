def generate_movements(coords):
    nodes = []
    movements = []
    current_direction = None
    distance_count = 0

    for i in range(1, len(coords)):
        x_diff = coords[i][0] - coords[i-1][0]
        y_diff = coords[i][1] - coords[i-1][1]
        new_direction = (x_diff, y_diff)

        if new_direction == current_direction:
            distance_count += 1
        else:
            if current_direction is not None:
                movements.append(f"avance de {distance_count} cases")
                nodes.append(coords[i-1])

                # Determine the angle based on the change in direction
                if current_direction == (0, 1):  # moving up
                    if new_direction == (1, 0):  # turning right
                        movements.append("tourne de 90° vers la droite")
                    else:  # turning left
                        movements.append("tourne de 90° vers la gauche")
                elif current_direction == (1, 0):  # moving right
                    if new_direction == (0, -1):  # turning down
                        movements.append("tourne de 90° vers la droite")
                    else:  # turning up
                        movements.append("tourne de 90° vers la gauche")
                elif current_direction == (0, -1):  # moving down
                    if new_direction == (-1, 0):  # turning left
                        movements.append("tourne de 90° vers la droite")
                    else:  # turning right
                        movements.append("tourne de 90° vers la gauche")
                elif current_direction == (-1, 0):  # moving left
                    if new_direction == (0, 1):  # turning up
                        movements.append("tourne de 90° vers la droite")
                    else:  # turning down
                        movements.append("tourne de 90° vers la gauche")

            current_direction = new_direction
            distance_count = 1

    # Add the final movement
    movements.append(f"avance de {distance_count} cases")
    nodes.append(coords[-1])

    return nodes, movements

# Exemple d'utilisation
coordinates = [
    (14, 31), (14, 32), (14, 33), (14, 34), (14, 35), (14, 36), (14, 37), (14, 38),
    (14, 39), (14, 40), (14, 41), (14, 42), (14, 43), (14, 44), (15, 44), (16, 44),
    (17, 44), (18, 44), (19, 44)
]

nodes, movements = generate_movements(coordinates)
print("Coordonnées des nœuds :", nodes)
print("Séquence des mouvements :")
for move in movements:
    print(move)
